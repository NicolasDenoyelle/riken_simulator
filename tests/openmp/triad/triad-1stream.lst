Fujitsu C/C++ Version 1.2.0   Tue Aug  1 16:41:24 2017
Compilation information
  Current directory : /home/odajima/sim-testsuites/omp_src/stream_benchmark
  Source file       : triad-1stream.c
(line-no.)(optimize)
        1             #include <stdio.h>
        2             #include <stdlib.h>
        3             #include <omp.h>
        4             #include "mytime.h"
        5             
        6             /* #define N 25600 */
        7             #define N 314368
        8             
        9             double ALPHA = 3.0;
       10             double a[N] __attribute__((aligned(256)));
       11             double b[N] __attribute__((aligned(256)));
       12             double c[N] __attribute__((aligned(256)));
       13             
       14             int main(int argc, char **argv)
       15             {
       16               int i;
       17               static double time;
       18             
       19             #pragma omp parallel
       20               {
       21                 printf("%d of %d\n", omp_get_num_threads(), omp_get_thread_num());
       22             
       23             #pragma omp for
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    SIMD(VL: 8)
                       <<<    SOFTWARE PIPELINING
                       <<< Loop-information  End >>>
       24   p     3v      for (i = 0; i < N; i++) {
       25   p     3v        a[i] = 0.0;
       26   p     3v        b[i] = (double)(i);
       27   p     3v        c[i] = (double)(i+3);
       28   p     3v      }
       29               }
       30             
       31    i          time = get_dtime();
       32             
       33             #pragma omp parallel for
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    SIMD(VL: 8)
                       <<<    SOFTWARE PIPELINING
                       <<< Loop-information  End >>>
       34   p     3v      for (i = 0; i < N; i++)
       35   p     3v        a[i] = b[i] + 3.0 * c[i];
       36             
       37    i          time = get_dtime() - time;
       38             
       39               printf("time = %lf [msec]\n", time * 1000.0);
       40               printf("GFLOPS = %lf\n", (2 * N) / time / 1e9);
       41               printf("BW = %lf [GB/s]\n", (3 * N * sizeof(double)) / time / 1e9);
       42               printf("dummy: %lf\n", a[N-1]);
       43             
       44               return 0;
       45             }
Total prefetch num: 0
Optimization messages
  jwd6001s-i  "triad-1stream.c", line 24: SIMD conversion is applied to this loop with the loop variable 'i'.
  jwd8204o-i  "triad-1stream.c", line 24: This loop is software pipelined.
  jwd8205o-i  "triad-1stream.c", line 24: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to '120'.
  jwd8101o-i  "triad-1stream.c", line 31: Inline expansion is applied to the user defined function 'get_dtime'.
  jwd6001s-i  "triad-1stream.c", line 34: SIMD conversion is applied to this loop with the loop variable 'i'.
  jwd8204o-i  "triad-1stream.c", line 34: This loop is software pipelined.
  jwd8205o-i  "triad-1stream.c", line 34: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to '192'.
  jwd8101o-i  "triad-1stream.c", line 37: Inline expansion is applied to the user defined function 'get_dtime'.
  jwd8206o-i  "triad-1stream.c", line 40: Division is changed to multiplication by reciprocal.
  jwd8209o-i  "triad-1stream.c", line 40: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
  jwd8206o-i  "triad-1stream.c", line 41: Division is changed to multiplication by reciprocal.
  jwd8209o-i  "triad-1stream.c", line 41: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
Statistics information
  Option information
    Command line options : -Kfast,openmp -Nlst=t -Koptmsg=2 -I../../include -S -o triad-1stream.s
    Effective options    : -noansi -g0 -mt -Qy -std=gnu99 -x- -O3 -Knoalias_const
                           -Kassume=noshortloop -Kassume=nomemory_bandwidth
                           -Kassume=notime_consuming_compilation -Kcmodel=small -Kconst
                           -Knodaz -Keval -Kfast_matmul -Knofconst -Knofenv_access
                           -Kfp_contract -Kfp_relaxed -Kfsimple -Kilfunc=loop -Klib
                           -Kloop_blocking -Kloop_fission -Kloop_nofission_if -Kloop_fusion
                           -Kloop_interchange -Kloop_nopart_simd -Kloop_noversioning
                           -Klooptype=f -Knolto -Knomemalias -Kmfunc=1 -Kns -Knontst -Knoocl
                           -Komitfp -Kopenmp -Kopenmp_noassume_norecurrence
                           -Kopenmp_noordered_reduction -Knoopenmp_simd -Koptmsg=2
                           -Knoparallel -Kparallel_nofp_precision -Knopreex
                           -Kprefetch_cache_level=all -Kprefetch_conditional
                           -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride
                           -Kprefetch_nostrong -Kprefetch_strong_L2 -Krdconv
                           -Krestp=restrict -Ksibling_calls -Ksimd=auto -Ksimd_noextension
                           -Ksimd_nomaskload -Ksimd_reduction_product -Ksimd_reg_size=512
                           -Knostriping -KARMv8_2 -KSVE -Kswp -Kunroll -KNOXFILL
                           -Ncancel_overtime_compilation -Nnoexceptions -Nnofjcex
                           -Nnohook_func -Nnohook_time -Nnoline -Nlst=p -Nlst=t
                           -Nquickdbg=noheapchk -Nquickdbg=nosubchk -NRnotrap -Nrt_notune
                           -Nsetvalue=noheap -Nsetvalue=nostack -Nsetvalue=noscalar
                           -Nsetvalue=noarray -Nsetvalue=nostruct -Nsrc -Nsta -Nuse_rodata
