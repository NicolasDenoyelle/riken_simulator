FUJITSU CONFIDENTIAL
Fujitsu C/C++ Version 1.2.0   Mon Jul  9 19:08:38 2018
Compilation information
  Current directory : /home/odajima/workspace/gem5-latency
  Source file       : latency_l1_pointer.c
(line-no.)(optimize)
        1             // fccpx -Kfast -Xg -o latency_l1_pointer.out latency_l1_pointer.c
        2             
        3             #include <stdio.h>
        4             #include <stdint.h>
        5             #include <stdlib.h>
        6             
        7             #define SIZE (4096)
        8             
        9             #include <time.h>
       10             
       11             inline double get_dtime(void) {
       12               struct timespec ts;
       13               clock_gettime(CLOCK_MONOTONIC, &ts);
       14               return ((double)(ts.tv_sec) + (double)(ts.tv_nsec) * 1e-9);
       15             }
       16             
       17             uint64_t **array[SIZE+1] __attribute__((aligned(16384)));
       18             uint64_t **ans = 0;
       19             
       20             int main(int argc, char *argv[])
       21             {
       22               int i, j;
       23               int rep = 1000;
       24               uint64_t **p;
       25               static double time;
       26             
       27               if (argc == 2) {
       28    i            rep = atoi(argv[1]);
       29               }
       30               printf("rep : %d SIZE : %d\n", rep, SIZE);
       31             
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    SOFTWARE PIPELINING
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      array
                       <<< Loop-information  End >>>
       32               for (i = 0; i < SIZE; i++) {
       33                 array[i] = (uint64_t **)&array[i+1];
       34               }
       35               array[SIZE] = (uint64_t **)&array[0];
       36             
       37    i          time = get_dtime();
       38             
       39               for (i = 0; i < rep; i++) {
       40                 p = array[0];
       41                 for (j = 0; j < SIZE; j++) {
       42                   p = (uint64_t **)*p;
       43                 }
       44                 ans = p;
       45               }
       46             
       47    i          time = get_dtime() - time;
       48             
       49               printf("res : %p\n", ans);
       50               printf("latency = %lf [cycle], %lf [nsec]\n", time / (rep * SIZE) * (1.8 * 1e9), time / SIZE / rep * 1e9);
       51             
       52               return 0;
       53             }
Total prefetch num: 0
Statistics information
  Option information
    Command line options : -Kfast -Nlst=t -S
    Effective options    : -noansi -g0 -Qy -std=gnu99 -x- -O3 -Knoalias_const -Kalign_loops
                           -Kassume=noshortloop -Kassume=nomemory_bandwidth
                           -Kassume=notime_consuming_compilation -Kcmodel=small -Kconst
                           -Knodaz -Keval -Keval_noconcurrent -Kfast_matmul -Knofconst
                           -Knofed -Knofenv_access -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz
                           -Kilfunc=loop -Klib -Kloop_blocking -Kloop_fission
                           -Kloop_nofission_if -Kloop_fusion -Kloop_interchange
                           -Kloop_nopart_simd -Kloop_noversioning -Klooptype=f -Knolto
                           -Knomemalias -Kmfunc=1 -Knontst -Knoocl -Komitfp -Knoopenmp
                           -Knoopenmp_simd -Knooptmsg -Knopc_relative_literal_loads
                           -Knoparallel -Knopreex -Kprefetch_cache_level=all
                           -Kprefetch_conditional -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride
                           -Kprefetch_nostrong -Kprefetch_strong_L2 -Krdconv
                           -Krestp=restrict -Ksibling_calls -Ksimd=auto -Ksimd_noextension
                           -Ksimd_nomaskload -Ksimd_packed_promotion
                           -Ksimd_reduction_product -Ksimd_reg_size=512 -Knostrict_aliasing
                           -Knostriping -KARMV8_3_A -KSVE -Kswp -Kunroll -Knounroll_and_jam
                           -Knozfill -Ncancel_overtime_compilation
                           -Nnocoverage(--no-coverage) -Nnoexceptions -Nnofjcex
                           -Nnohook_func -Nnohook_time -Nline -Nlst=p -Nlst=t
                           -Nquickdbg=noheapchk -Nquickdbg=nosubchk -NRnotrap -Nrt_notune
                           -Nsetvalue=noheap -Nsetvalue=nostack -Nsetvalue=noscalar
                           -Nsetvalue=noarray -Nsetvalue=nostruct -Nsrc -Nsta
