FUJITSU CONFIDENTIAL
Fujitsu C/C++ Version 1.2.0   Mon Jul  9 19:08:38 2018
Compilation information
  Current directory : /home/odajima/workspace/gem5-latency
  Source file       : latency_l2_pointer.c
(line-no.)(optimize)
        1             #include <stdio.h>
        2             #include <stdint.h>
        3             #include <stdlib.h>
        4             #include <time.h>
        5             
        6             #define L1LINE (256)
        7             #define L1SIZE (32 * 1024)
        8             #define GAP    (L1LINE / sizeof(uint64_t *))
        9             #define GAP7   (GAP * 7)
       10             #define NL     (1024)
       11             #define SIZE   (GAP7 * NL)
       12             
       13             uint64_t **array[SIZE] __attribute__((aligned(16384)));
       14             uint64_t **ans = 0;
       15             
       16             inline double get_dtime(void) {
       17               struct timespec ts;
       18               clock_gettime(CLOCK_MONOTONIC, &ts);
       19               return ((double)(ts.tv_sec) + (double)(ts.tv_nsec) * 1e-9);
       20             }
       21             
       22             int main(int argc, char *argv[])
       23             {
       24               int i, j;
       25               int rep = 5000;
       26               uint64_t **p;
       27               static double time;
       28             
       29               if (argc == 2) {
       30    i            rep = atoi(argv[1]);
       31               }
       32               printf("rep : %d SIZE : %lu NL : %d\n", rep, SIZE, NL);
       33               printf("GAP : %ld GAP7 : %ld\n", GAP, GAP7);
       34             
       35               for (i = 0; i < SIZE; i += GAP7) {
       36                 array[i] = (uint64_t **)&array[i + GAP7];
       37               }
       38               int upper = SIZE / GAP7;
       39               upper = (upper - 1) * GAP7;
       40               array[upper] = (uint64_t **)&array[0];
       41             
       42    i          time = get_dtime();
       43             
       44               for (i = 0; i < rep; i++) {
       45                 p = array[0];
       46                 for (j = 0; j < NL; j++) {
       47                   p = (uint64_t **)*p;
       48                 }
       49                 ans = p;
       50               }
       51             
       52    i          time = get_dtime() - time;
       53             
       54               printf("res : %p\n", ans);
       55               printf("latency = %lf [cycle], %lf [nsec]\n", time / (rep * NL) * (1.8 * 1e9), time / NL / rep * 1e9);
       56             
       57               return 0;
       58             }
Total prefetch num: 0
Statistics information
  Option information
    Command line options : -Kfast -Nlst=t -S
    Effective options    : -noansi -g0 -Qy -std=gnu99 -x- -O3 -Knoalias_const -Kalign_loops
                           -Kassume=noshortloop -Kassume=nomemory_bandwidth
                           -Kassume=notime_consuming_compilation -Kcmodel=small -Kconst
                           -Knodaz -Keval -Keval_noconcurrent -Kfast_matmul -Knofconst
                           -Knofed -Knofenv_access -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz
                           -Kilfunc=loop -Klib -Kloop_blocking -Kloop_fission
                           -Kloop_nofission_if -Kloop_fusion -Kloop_interchange
                           -Kloop_nopart_simd -Kloop_noversioning -Klooptype=f -Knolto
                           -Knomemalias -Kmfunc=1 -Knontst -Knoocl -Komitfp -Knoopenmp
                           -Knoopenmp_simd -Knooptmsg -Knopc_relative_literal_loads
                           -Knoparallel -Knopreex -Kprefetch_cache_level=all
                           -Kprefetch_conditional -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride
                           -Kprefetch_nostrong -Kprefetch_strong_L2 -Krdconv
                           -Krestp=restrict -Ksibling_calls -Ksimd=auto -Ksimd_noextension
                           -Ksimd_nomaskload -Ksimd_packed_promotion
                           -Ksimd_reduction_product -Ksimd_reg_size=512 -Knostrict_aliasing
                           -Knostriping -KARMV8_3_A -KSVE -Kswp -Kunroll -Knounroll_and_jam
                           -Knozfill -Ncancel_overtime_compilation
                           -Nnocoverage(--no-coverage) -Nnoexceptions -Nnofjcex
                           -Nnohook_func -Nnohook_time -Nline -Nlst=p -Nlst=t
                           -Nquickdbg=noheapchk -Nquickdbg=nosubchk -NRnotrap -Nrt_notune
                           -Nsetvalue=noheap -Nsetvalue=nostack -Nsetvalue=noscalar
                           -Nsetvalue=noarray -Nsetvalue=nostruct -Nsrc -Nsta
